# Note that to extract commit info by action triggered by pull request,
# you need to call actions/checkout@v3 with ref: ${{ github.head_ref }} before this action.

outputs:
  commit-link:
    description: 'Commit link: PR url for pull request, commit url for push and workflow dispatch'
    value: ${{ steps.triggered-by-pull-request-merged.outputs.commit-link || steps.triggered-by-pull-request-not-merged.outputs.commit-link || steps.triggered-by-push-or-workflow-dispatch.outputs.commit-link }}
  commit-message:
    description: 'Commit message'
    value: ${{ steps.triggered-by-pull-request-merged.outputs.commit-message || steps.triggered-by-pull-request-not-merged.outputs.commit-message || steps.triggered-by-push-or-workflow-dispatch.outputs.commit-message }}

runs:
  using: composite
  steps:
    # When action is triggered by pull request (merged)
    - id: triggered-by-pull-request-merged
      if: github.event_name == 'pull_request' && github.event.pull_request.merged == true
      uses: actions/github-script@v6
      env:
        HTML_URL: ${{ github.event.pull_request.html_url }}
      with:
        script: |
          const { HTML_URL } = process.env;
          const { data: commit } = await github.rest.repos.getCommit({
            owner: context.repo.owner,
            repo: context.repo.repo,
            ref: context.sha,
          });
          const message = commit.commit.message.split('\n')[0];
          core.setOutput('commit-link', `${HTML_URL}`);
          core.setOutput('commit-message', `${message} [${context.sha.slice(0, 7)}]`);

    # When action is triggered by pull request (not merged)
    - id: triggered-by-pull-request-not-merged
      if: github.event_name == 'pull_request' && github.event.pull_request.merged == false
      uses: actions/github-script@v6
      env:
        HTML_URL: ${{ github.event.pull_request.html_url }}
        SHA: ${{ github.event.pull_request.head.sha }}
      with:
        script: |
          const { HTML_URL, SHA } = process.env;
          const { data: commit } = await github.rest.repos.getCommit({
            owner: context.repo.owner,
            repo: context.repo.repo,
            ref: SHA,
          });
          const message = commit.commit.message.split('\n')[0];
          core.setOutput('commit-link', `${HTML_URL}`);
          core.setOutput('commit-message', `${message} [${SHA.slice(0, 7)}]`);

    # When action is triggered by push or workflow dispatch
    - id: triggered-by-push-or-workflow-dispatch
      if: github.event_name == 'push' || github.event_name == 'workflow_dispatch'
      uses: actions/github-script@v6
      env:
        REPO_URL: ${{ github.event.repository.html_url }}
        SHA: ${{ github.sha }}
      with:
        script: |
          const { REPO_URL, SHA } = process.env;
          const { data: commit } = await github.rest.repos.getCommit({
            owner: context.repo.owner,
            repo: context.repo.repo,
            ref: SHA,
          });
          const message = commit.commit.message.split('\n')[0];
          core.setOutput('commit-link', `${REPO_URL}/commits/${SHA}`);
          core.setOutput('commit-message', `${message} [${SHA.slice(0, 7)}]`);
