name: on pr
on:
  pull_request:
    types:
      - closed
    branches:
      - release

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Test
        run: |
          echo $BRANCH
          echo $IS_DRAFT
        env:
          BRANCH: ${{ github.head_ref }}
          IS_DRAFT: ${{ github.event.pull_request.draft == true }}
          MERGED: ${{ github.event.pull_request.merged == true }}

  create-release-note:
    if: startsWith(github.head_ref, 'releases/v') && github.event.pull_request.merged == false
    name: create release note
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set output
        id: vars
        run: |
          echo "version=${BRANCH#releases/v}" >> $GITHUB_OUTPUT
        env:
          BRANCH: ${{ github.head_ref }}
      - uses: actions/github-script@v6
        id: generateReleaseNotes
        env:
          PAT: '${{ secrets.TURARA_PAT }}'
        with:
          script: |
            const script = require('../../octokit_playground/scripts/generateRelease.mjs')
            await script({ github, context, core })
      - name: Test
        run: |
          echo $RELEASE_NOTE
        env:
          RELEASE_NOTE: ${{ steps.generateReleaseNotes.outputs.releaseNotes }}

  release-note:
    if: startsWith(github.head_ref, 'releases/v') && github.event.pull_request.merged == true
    name: release note
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set output
        id: vars
        run: |
          echo "version=${BRANCH#releases/v}" >> $GITHUB_OUTPUT
        env:
          BRANCH: ${{ github.head_ref }}
      - uses: ncipollo/release-action@v1.12.0
        with:
          tag: v${{ steps.vars.outputs.version }}
          name: Release ${{ steps.vars.outputs.version }}
          draft: true
          generateReleaseNotes: true
          # token: ${{ secrets.TURARA_PAT }}
